;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;; Virus Genotypes ;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


globals [

   VirusGenotypes          ;; Virus genotypes, dictionary {[ ContainerNumber, {[sequence, count ], [sequence, count ]} ]}
                           ;; The first dictionary key is the container number
                           ;; The second dictionary holds the sequences and counts of each sequence in the respective container
   TotalVirusGenotypes 

]



to initVirusGenotypes
  set VirusGenotypes table:make
  set TotalVirusGenotypes [ ]
end


;; Add genotype or increment it to the VirusGenotypes dict
;; If no key exists, it will create one
;; Input: container, sequence
to addGenotype [ cont seq ]
  if not (table:has-key? VirusGenotypes cont) [ table:put VirusGenotypes cont table:make ]
  ;; If entry exists increment it, if no entry exists create one
  ifelse table:has-key? (table:get VirusGenotypes cont) seq 
  [ table:put (table:get VirusGenotypes cont) seq (getGenotypeCount cont seq) + 1 ]
  [ table:put (table:get VirusGenotypes cont) seq 1 ]
  set TotalVirusGenotypes lput seq TotalVirusGenotypes
end

to removeGenotype [ cont seq ]
    let num getGenotypeCount cont seq
    ifelse num = 1 [
        table:remove (table:get VirusGenotypes cont) seq ;; remove, count = 1
    ][
        table:put (table:get VirusGenotypes cont) seq (num - 1) ;;decrement
    ]
    let i 0
    while [ i < length TotalVirusGenotypes ] [
        if item i TotalVirusGenotypes = seq [
            set TotalVirusGenotypes remove-item i TotalVirusGenotypes
            set i i + length TotalVirusGenotypes
        ]
        set i i + 1
    ]
end


to-report getGenotypeCount [ cont seq ]
    report table:get (table:get VirusGenotypes cont) seq
end



to-report getTotalVirusGenotypeCount
     let result 0
     foreach TotalVirusGenotypes [
         set result result + item 1 ?
     ]
     report result
end

to printVirusGenotypes
   foreach table:to-list virusgenotypes [ 
         print (word "Container Infected # " item 0 ? )
         foreach table:to-list (item 1 ?) [
           output-print (word item 0 ? " ==> " item 1 ?)
         ]
   ]
end





to-report getInfectedCount
  report table:length VirusGenotypes
end